
import { useEffect } from "react";
import { Link } from "react-router-dom";

export default function VulnerabilityDatabase() {
  useEffect(() => {
    // Load Font Awesome
    const script = document.createElement("script");
    script.src = "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js";
    script.async = true;
    document.body.appendChild(script);

    // Sample vulnerability data
    const vulnerabilityData = [
      {
        cveId: "CVE-2025-1974",
        severity: "CRITICAL",
        score: 9.8,
        technologies: ["Ingress NGINX Controller"],
        component: "ingress-nginx-controller-1.10",
        cisaKev: true,
        hasFix: true,
        published: "Mar 24, 2025",
      },
      {
        cveId: "CVE-2025-1843",
        severity: "HIGH",
        score: 7.5,
        technologies: ["Kubernetes", "Docker"],
        component: "kubelet-1.25",
        cisaKev: false,
        hasFix: true,
        published: "Feb 15, 2025",
      },
      {
        cveId: "CVE-2025-1652",
        severity: "MEDIUM",
        score: 5.3,
        technologies: ["PostgreSQL"],
        component: "postgresql-14.5",
        cisaKev: false,
        hasFix: false,
        published: "Jan 8, 2025",
      },
      {
        cveId: "CVE-2024-3994",
        severity: "CRITICAL",
        score: 9.1,
        technologies: ["Linux Kernel"],
        component: "linux-kernel-5.15",
        cisaKev: true,
        hasFix: false,
        published: "Dec 12, 2024",
      },
      {
        cveId: "CVE-2024-3855",
        severity: "LOW",
        score: 2.9,
        technologies: ["OpenSSL"],
        component: "openssl-3.0.7",
        cisaKev: false,
        hasFix: true,
        published: "Nov 5, 2024",
      },
      {
        cveId: "CVE-2024-3761",
        severity: "HIGH",
        score: 8.2,
        technologies: ["Apache HTTP Server"],
        component: "httpd-2.4.57",
        cisaKev: true,
        hasFix: true,
        published: "Oct 22, 2024",
      },
      {
        cveId: "CVE-2024-3655",
        severity: "CRITICAL",
        score: 9.5,
        technologies: ["Redis"],
        component: "redis-7.0.11",
        cisaKev: false,
        hasFix: true,
        published: "Sep 18, 2024",
      },
      {
        cveId: "CVE-2024-3542",
        severity: "MEDIUM",
        score: 6.7,
        technologies: ["Nginx"],
        component: "nginx-1.25.2",
        cisaKev: false,
        hasFix: false,
        published: "Aug 9, 2024",
      },
    ];

    // Current filters
    let currentFilters = {
      severity: "",
      hasExploit: false,
      hasFix: false,
      searchTerm: "",
    };

    // Initialize the app
    function init() {
      renderTable(vulnerabilityData);
      updateStats();
      setupEventListeners();
    }

    // Set up event listeners
    function setupEventListeners() {
      const searchInput = document.getElementById("searchInput");
      const filterCritical = document.getElementById("filterCritical");
      const filterExploit = document.getElementById("filterExploit");
      const filterFix = document.getElementById("filterFix");
      const filterAll = document.getElementById("filterAll");

      if (searchInput) {
        searchInput.addEventListener("input", (e) => {
          const target = e.target as HTMLInputElement;
          currentFilters.searchTerm = target.value.toLowerCase();
          filterData();
        });
      }

      if (filterCritical) {
        filterCritical.addEventListener("click", () => {
          currentFilters.severity = currentFilters.severity === "CRITICAL" ? "" : "CRITICAL";
          filterCritical.classList.toggle("bg-black", currentFilters.severity === "CRITICAL");
          filterCritical.classList.toggle("bg-red-600", currentFilters.severity !== "CRITICAL");
          filterData();
        });
      }

      if (filterExploit) {
        filterExploit.addEventListener("click", () => {
          currentFilters.hasExploit = !currentFilters.hasExploit;
          filterExploit.classList.toggle("bg-red-600", currentFilters.hasExploit);
          filterExploit.classList.toggle("bg-black", !currentFilters.hasExploit);
          filterData();
        });
      }

      if (filterFix) {
        filterFix.addEventListener("click", () => {
          currentFilters.hasFix = !currentFilters.hasFix;
          filterFix.classList.toggle("bg-red-600", currentFilters.hasFix);
          filterFix.classList.toggle("bg-white", !currentFilters.hasFix);
          filterFix.classList.toggle("text-black", !currentFilters.hasFix);
          filterFix.classList.toggle("text-white", currentFilters.hasFix);
          filterData();
        });
      }

      if (filterAll) {
        filterAll.addEventListener("click", () => {
          // Reset all filters
          currentFilters = {
            severity: "",
            hasExploit: false,
            hasFix: false,
            searchTerm: "",
          };

          // Reset UI elements
          if (searchInput) searchInput.value = "";
          if (filterCritical) {
            filterCritical.classList.remove("bg-black");
            filterCritical.classList.add("bg-red-600");
          }
          if (filterExploit) {
            filterExploit.classList.remove("bg-red-600");
            filterExploit.classList.add("bg-black");
          }
          if (filterFix) {
            filterFix.classList.remove("bg-red-600", "text-white");
            filterFix.classList.add("bg-white", "text-black");
          }

          filterData();
        });
      }
    }

    // Filter data based on current filters
    function filterData() {
      const filteredData = vulnerabilityData.filter((item) => {
        // Search term filter
        const matchesSearch =
          currentFilters.searchTerm === "" ||
          item.cveId.toLowerCase().includes(currentFilters.searchTerm) ||
          item.technologies.some((tech) => tech.toLowerCase().includes(currentFilters.searchTerm)) ||
          item.component.toLowerCase().includes(currentFilters.searchTerm);

        // Severity filter
        const matchesSeverity = currentFilters.severity === "" || item.severity === currentFilters.severity;

        // Exploit filter
        const matchesExploit = !currentFilters.hasExploit || item.cisaKev;

        // Fix filter
        const matchesFix = !currentFilters.hasFix || item.hasFix;

        return matchesSearch && matchesSeverity && matchesExploit && matchesFix;
      });

      renderTable(filteredData);
      updateStats(filteredData);
    }

    // Render the table with data
    function renderTable(data: typeof vulnerabilityData) {
      const vulnerabilityTable = document.getElementById("vulnerabilityTable");
      if (!vulnerabilityTable) return;

      vulnerabilityTable.innerHTML = "";

      if (data.length === 0) {
        const emptyRow = document.createElement("div");
        emptyRow.className = "p-4 text-center text-black col-span-12";
        emptyRow.textContent = "No vulnerabilities match your filters.";
        vulnerabilityTable.appendChild(emptyRow);
        return;
      }

      data.forEach((item) => {
        const row = document.createElement("div");
        row.className = "grid grid-cols-12 p-4 border-b border-black hover:bg-gray-100";

        // CVE ID
        const cveCell = document.createElement("div");
        cveCell.className = "col-span-2 font-bold text-red-600";
        cveCell.textContent = item.cveId;
        row.appendChild(cveCell);

        // Severity
        const severityCell = document.createElement("div");
        severityCell.className = `col-span-1 px-2 py-1 text-center font-bold text-xs ${getSeverityClass(item.severity)}`;
        severityCell.textContent = item.severity;
        row.appendChild(severityCell);

        // Score
        const scoreCell = document.createElement("div");
        scoreCell.className = "col-span-1 font-bold";
        scoreCell.textContent = item.score.toString();
        row.appendChild(scoreCell);

        // Technologies
        const techCell = document.createElement("div");
        techCell.className = "col-span-2";
        techCell.textContent = item.technologies.join(", ");
        row.appendChild(techCell);

        // Component
        const componentCell = document.createElement("div");
        componentCell.className = "col-span-3";
        componentCell.textContent = item.component;
        row.appendChild(componentCell);

        // CISA KEV
        const cisaCell = document.createElement("div");
        cisaCell.className = "col-span-1";
        if (item.cisaKev) {
          const badge = document.createElement("span");
          badge.className = "bg-red-600 text-white px-2 py-1 text-xs font-bold";
          badge.textContent = "YES";
          cisaCell.appendChild(badge);
        } else {
          cisaCell.textContent = "NO";
        }
        row.appendChild(cisaCell);

        // Published
        const publishedCell = document.createElement("div");
        publishedCell.className = "col-span-2";
        publishedCell.textContent = item.published;
        row.appendChild(publishedCell);

        vulnerabilityTable.appendChild(row);
      });
    }

    // Get severity CSS class
    function getSeverityClass(severity: string) {
      switch (severity) {
        case "CRITICAL":
          return "severity-critical";
        case "HIGH":
          return "severity-high";
        case "MEDIUM":
          return "severity-medium";
        case "LOW":
          return "severity-low";
        default:
          return "bg-gray-200";
      }
    }

    // Update statistics
    function updateStats(data = vulnerabilityData) {
      const criticalCount = document.getElementById("criticalCount");
      const exploitCount = document.getElementById("exploitCount");
      const unpatchedCount = document.getElementById("unpatchedCount");
      const totalCount = document.getElementById("totalCount");

      const critical = data.filter((item) => item.severity === "CRITICAL").length;
      const exploits = data.filter((item) => item.cisaKev).length;
      const unpatched = data.filter((item) => !item.hasFix).length;
      const total = data.length;

      if (criticalCount) criticalCount.textContent = critical.toString();
      if (exploitCount) exploitCount.textContent = exploits.toString();
      if (unpatchedCount) unpatchedCount.textContent = unpatched.toString();
      if (totalCount) totalCount.textContent = total.toString();
    }

    // Initialize the application
    init();

    return () => {
      // Cleanup
      if (document.body.contains(script)) {
        document.body.removeChild(script);
      }
    };
  }, []);

  return (
    <div className="min-h-screen flex flex-col bg-white font-mono">
      {/* Back Button */}
      <div className="fixed top-4 left-4 z-50">
        <Link
          to="/"
          className="brutal-btn px-4 py-2 bg-black text-white font-bold border-2 border-black hover:bg-red-600 hover:border-red-600"
        >
          ← BACK
        </Link>
      </div>

      <div className="container mx-auto p-4 max-w-7xl">
        {/* Header */}
        <header className="mb-8 brutal-border bg-white p-6">
          <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
            <div>
              <h1 className="text-4xl md:text-5xl font-bold text-red-600 mb-2">WIZ VULNERABILITY DATABASE</h1>
              <p className="text-black">Comprehensive risk assessment for modern cloud environments</p>
            </div>
            <div className="flex items-center gap-2">
              <span className="px-3 py-1 bg-black text-white text-sm font-bold">LIVE</span>
              <span className="pulse-animation w-3 h-3 rounded-full bg-red-600"></span>
              <span className="text-sm">
                Last updated: <span id="lastUpdated">Just now</span>
              </span>
            </div>
          </div>
        </header>

        {/* Controls Section */}
        <section className="mb-8 brutal-border bg-white p-6">
          <div className="flex flex-col gap-4">
            {/* Search Bar */}
            <div className="relative">
              <input
                type="text"
                id="searchInput"
                placeholder="SEARCH BY CVE ID, TECHNOLOGY, OR COMPONENT"
                className="w-full p-4 brutal-border-thin bg-white text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-red-600 focus:border-transparent"
              />
              <button className="absolute right-2 top-1/2 transform -translate-y-1/2 bg-red-600 text-white p-2 brutal-border-thin">
                <i className="fas fa-search"></i>
              </button>
            </div>

            {/* Filter Controls */}
            <div className="flex flex-wrap gap-2">
              <button
                id="filterCritical"
                className="brutal-btn px-4 py-2 bg-red-600 text-white font-bold brutal-border-thin flex items-center gap-2"
              >
                <i className="fas fa-skull"></i> CRITICAL
              </button>
              <button
                id="filterExploit"
                className="brutal-btn px-4 py-2 bg-black text-white font-bold brutal-border-thin flex items-center gap-2"
              >
                <i className="fas fa-bug"></i> CISA KEV EXPLOIT
              </button>
              <button
                id="filterFix"
                className="brutal-btn px-4 py-2 bg-white text-black font-bold brutal-border-thin flex items-center gap-2"
              >
                <i className="fas fa-wrench"></i> HAS FIX
              </button>
              <button
                id="filterAll"
                className="brutal-btn px-4 py-2 bg-white text-black font-bold brutal-border-thin flex items-center gap-2 ml-auto"
              >
                <i className="fas fa-sync-alt"></i> RESET FILTERS
              </button>
            </div>
          </div>
        </section>

        {/* Stats Overview */}
        <section className="mb-8 grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="brutal-border bg-red-600 text-white p-4">
            <h3 className="font-bold text-lg mb-2">CRITICAL VULNS</h3>
            <p className="text-3xl font-bold" id="criticalCount">
              12
            </p>
          </div>
          <div className="brutal-border bg-black text-white p-4">
            <h3 className="font-bold text-lg mb-2">EXPLOITABLE</h3>
            <p className="text-3xl font-bold" id="exploitCount">
              8
            </p>
          </div>
          <div className="brutal-border bg-white text-black p-4">
            <h3 className="font-bold text-lg mb-2">UNPATCHED</h3>
            <p className="text-3xl font-bold" id="unpatchedCount">
              15
            </p>
          </div>
          <div className="brutal-border bg-white text-black p-4">
            <h3 className="font-bold text-lg mb-2">TOTAL</h3>
            <p className="text-3xl font-bold" id="totalCount">
              42
            </p>
          </div>
        </section>

        {/* Vulnerability Table */}
        <section className="brutal-border bg-white">
          {/* Table Header */}
          <div className="grid grid-cols-12 bg-black text-white p-4 font-bold brutal-border-thin">
            <div className="col-span-2">CVE ID</div>
            <div className="col-span-1">SEVERITY</div>
            <div className="col-span-1">SCORE</div>
            <div className="col-span-2">TECHNOLOGIES</div>
            <div className="col-span-3">COMPONENT</div>
            <div className="col-span-1">CISA KEV</div>
            <div className="col-span-2">PUBLISHED</div>
          </div>

          {/* Table Body */}
          <div className="max-h-[600px] overflow-y-auto scrollbar-custom" id="vulnerabilityTable">
            {/* Sample vulnerability data will be inserted here by JavaScript */}
          </div>
        </section>

        {/* Risk Assessment Rubric */}
        <section className="mt-8 brutal-border bg-white p-6">
          <h2 className="text-2xl font-bold text-red-600 mb-4">RISK ASSESSMENT RUBRIC</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="brutal-border-thin p-4">
              <h3 className="font-bold text-lg mb-2 bg-black text-white p-2">SEVERITY CLASSIFICATION</h3>
              <ul className="space-y-2">
                <li className="flex items-center gap-2">
                  <span className="w-4 h-4 bg-red-600"></span>
                  <span>CRITICAL (9.0-10.0)</span>
                </li>
                <li className="flex items-center gap-2">
                  <span className="w-4 h-4 bg-orange-500"></span>
                  <span>HIGH (7.0-8.9)</span>
                </li>
                <li className="flex items-center gap-2">
                  <span className="w-4 h-4 bg-yellow-400"></span>
                  <span>MEDIUM (4.0-6.9)</span>
                </li>
                <li className="flex items-center gap-2">
                  <span className="w-4 h-4 bg-green-500"></span>
                  <span>LOW (0.1-3.9)</span>
                </li>
              </ul>
            </div>
            <div className="brutal-border-thin p-4">
              <h3 className="font-bold text-lg mb-2 bg-black text-white p-2">EXPLOITABILITY</h3>
              <ul className="space-y-2">
                <li className="flex items-center gap-2">
                  <i className="fas fa-bug text-red-600"></i>
                  <span>CISA KEV - Actively exploited</span>
                </li>
                <li className="flex items-center gap-2">
                  <i className="fas fa-bug text-orange-500"></i>
                  <span>Public exploit available</span>
                </li>
                <li className="flex items-center gap-2">
                  <i className="fas fa-bug text-gray-400"></i>
                  <span>No known exploit</span>
                </li>
              </ul>
            </div>
            <div className="brutal-border-thin p-4">
              <h3 className="font-bold text-lg mb-2 bg-black text-white p-2">REMEDIATION STATUS</h3>
              <ul className="space-y-2">
                <li className="flex items-center gap-2">
                  <i className="fas fa-check-circle text-green-500"></i>
                  <span>Patch available</span>
                </li>
                <li className="flex items-center gap-2">
                  <i className="fas fa-exclamation-triangle text-yellow-500"></i>
                  <span>Workaround available</span>
                </li>
                <li className="flex items-center gap-2">
                  <i className="fas fa-times-circle text-red-600"></i>
                  <span>No fix available</span>
                </li>
              </ul>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
}
